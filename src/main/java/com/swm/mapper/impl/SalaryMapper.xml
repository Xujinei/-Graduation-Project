<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swm.mapper.SalaryMapper">
    <resultMap id="BaseResultMap" type="com.swm.entity.Salary">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        <id column="workData" jdbcType="DATE" property="workdata"/>
        <result column="employeeId" jdbcType="INTEGER" property="employeeId"/>
        <result column="baseSalary" jdbcType="DOUBLE" property="basesalary"/>
        <result column="positionSalary" jdbcType="DOUBLE" property="positionsalary"/>
        <result column="baseSubsidy" jdbcType="INTEGER" property="basesubsidy"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="tax" jdbcType="DOUBLE" property="tax"/>
        <result column="insurance" jdbcType="DOUBLE" property="insurance"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="approver" jdbcType="INTEGER" property="approver"/>
        <result column="departementId" jdbcType="INTEGER" property="departementId"/>
        <result column="positionId" jdbcType="INTEGER" property="positionId"/>
        <result column="payTime" jdbcType="TIMESTAMP" property="paytime"/>
        <result column="workHours" jdbcType="DOUBLE" property="workHours"/>
    </resultMap>


    <resultMap id="EmpResultMap" type="com.swm.entity.EmpSalary">
        <id column="workData" jdbcType="DATE" property="workdata"/>
        <result column="employeeId" jdbcType="INTEGER" property="employeeId"/>
        <result column="baseSalary" jdbcType="DOUBLE" property="basesalary"/>
        <result column="positionSalary" jdbcType="DOUBLE" property="positionsalary"/>
        <result column="baseSubsidy" jdbcType="INTEGER" property="basesubsidy"/>
        <result column="total" jdbcType="DOUBLE" property="total"/>
        <result column="tax" jdbcType="DOUBLE" property="tax"/>
        <result column="insurance" jdbcType="DOUBLE" property="insurance"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="approver" jdbcType="INTEGER" property="approver"/>
        <result column="payTime" jdbcType="TIMESTAMP" property="paytime"/>
        <result column="workHours" jdbcType="DOUBLE" property="workHours"/>
        <association property="department" column="departementId"
                     select="com.swm.mapper.DepartmentMapper.selectByPrimaryKey"></association>
        <association property="position" column="positionId"
                     select="com.swm.mapper.PositionMapper.selectByPrimaryKey"></association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.util.Date">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        delete from salary
        where workData = #{workdata,jdbcType=DATE}
    </delete>
    <insert id="insert" parameterType="com.swm.entity.Salary">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        insert into salary (workData, employeeId, baseSalary,
        positionSalary, baseSubsidy, total,
        tax, insurance, status,
        approver, payTime,workHours,departementId,positionId)
        values (#{workdata,jdbcType=DATE}, #{employeeId,jdbcType=INTEGER}, #{basesalary,jdbcType=DOUBLE},
        #{positionsalary,jdbcType=DOUBLE}, #{basesubsidy,jdbcType=INTEGER}, #{total,jdbcType=DOUBLE},
        #{tax,jdbcType=DOUBLE}, #{insurance,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER},
        #{approver,jdbcType=INTEGER},
        #{paytime,jdbcType=TIMESTAMP},#{workHours,jdbcType=DOUBLE},#{departementId,jdbcType=INTEGER},
        #{positionId,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.swm.entity.Salary">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        update salary
        set employeeId = #{employeeId,jdbcType=INTEGER},
        baseSalary = #{basesalary,jdbcType=DOUBLE},
        positionSalary = #{positionsalary,jdbcType=DOUBLE},
        baseSubsidy = #{basesubsidy,jdbcType=INTEGER},
        total = #{total,jdbcType=DOUBLE},
        tax = #{tax,jdbcType=DOUBLE},
        insurance = #{insurance,jdbcType=DOUBLE},
        status = #{status,jdbcType=INTEGER},
        approver = #{approver,jdbcType=INTEGER},
        payTime = #{paytime,jdbcType=TIMESTAMP},
        workHours = #{workHours,jdbcType=DOUBLE},
        departementId= #{departementId,jdbcType=INTEGER},
        departementId=#{positionId,jdbcType=INTEGER}
        where workData = #{workdata,jdbcType=DATE}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.util.Date" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        select workData, employeeId, baseSalary, positionSalary, baseSubsidy, total,
        tax, insurance, status, approver, payTime , workHours ,departementId,positionId
        from salary
        where workData = #{workdata,jdbcType=DATE}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        select workData, employeeId, baseSalary, positionSalary, baseSubsidy, total,
        tax, insurance, status, approver, payTime ,departementId,positionId
        from salary
    </select>

    <select id="selectBySalary" resultMap="EmpResultMap">
        select workData, employeeId, baseSalary, positionSalary, baseSubsidy, total,
        tax, insurance, status, approver, payTime , workHours ,departementId,positionId
        from salary
        <if test="salary!=null">
            <where>
                <if test="salary.employeeId!=null">
                    employeeId=#{salary.employeeId}
                </if>
                <if test="salary.workdata!=null">
                    and workData between #{salary.workdata} and last_day(#{salary.workdata})
                </if>
                <if test="salary.departementId!=null">
                    and departementId = #{salary.departementId}
                </if>
                <if test="salary.positionId!=null">
                    and positionId = #{salary.positionId}
                </if>
            </where>
        </if>
        order by total
        <if test="upOrDown!=null and upOrDown==1">
            DESC
        </if>
        <if test="upOrDown!=null and upOrDown==0">
            ASC
        </if>
        <if test="pageIndex!=null and pageSize!=null">
            limit #{pageIndex},#{pageSize}
        </if>
    </select>


    <!--初始化薪资信息-->
    <select id="accountMonthSalary" resultMap="BaseResultMap">
        select w.workData as workData, emp.id as employeeId,
        emp.baseSalary as baseSalary, emp.positionSalary as positionSalary,
        emp.subsidy as baseSubsidy, (emp.hoursSalary*w.workHours+(w.overTime*10)+emp.subsidy) as total,
        (emp.baseSalary+emp.positionSalary)-3500 as tax, w.overTime*10 as insurance,
        "" as status, "" as approver, curdate() as payTime,
        w.workHours as workHours,
        emp.departmentId as departementId,
        emp.positionId as positionId
        from workinghours w , employeeinfo emp
        where emp.id = w.empId
        and w.workData=#{workdata,jdbcType=DATE}
    </select>

    <select id="countAll" resultType="java.lang.Integer">
    select count(*) from salary
  </select>

    <select id="countAllByKey" resultType="java.lang.Integer">
        select count(*) from salary
        <if test="#{salary}!=null">
            <where>
                <if test="salary.employeeId!=null">
                    employeeId=#{salary.employeeId}
                </if>
                <if test="salary.workdata!=null">
                    and workData between #{salary.workdata} and last_day(#{salary.workdata})
                </if>
                <if test="salary.departementId!=null">
                    and departementId = #{salary.departementId}
                </if>
                <if test="salary.positionId!=null">
                    and positionId = #{salary.positionId}
                </if>
            </where>
        </if>
    </select>

    <select id="selectDepartmentSalary" resultMap="EmpResultMap">
        select departementId , workData as workData, sum(total) as total
        from salary
        <if test="date!=null">
            <where>
                workData between #{date} and last_day(#{date})
            </where>
        </if>
        group by departementId
        order by sum(total)
        <if test="upOrDown!=null and upOrDown==1">
            DESC
        </if>
        <if test="upOrDown!=null and upOrDown==0">
            ASC
        </if>
    </select>
    <select id="selectPositionSalary" resultMap="EmpResultMap">
        select positionId , workData as workData, sum(total) as total
        from salary
        <if test="date!=null">
            <where>
                workData between #{date} and last_day(#{date})
            </where>
        </if>
        group by positionId
        order by sum(total)
        <if test="upOrDown!=null and upOrDown==1">
            DESC
        </if>
        <if test="upOrDown!=null and upOrDown==0">
            ASC
        </if>
    </select>

</mapper>