<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swm.mapper.AccountMapper">
    <resultMap id="BaseResultMap" type="com.swm.entity.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="promission" jdbcType="INTEGER" property="promission"/>
        <association property="employeeId" column="employeeId"
                     select="com.swm.mapper.EmployeeinfoMapper.selectByPrimaryKey"/>

    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        delete from account
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.swm.entity.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into account (id, username, password,
        employeeId, lastLoginTime, status,
        promission)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{employeeId.id,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
        #{promission,jdbcType=INTEGER})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.swm.entity.Account">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        update account
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        employeeId = #{employeeId.id,jdbcType=INTEGER},
        lastLoginTime = #{lastLoginTime,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER},
        promission = #{promission,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <update id="updatePassword">
        update account
        set password = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        select id, username, password, employeeId, lastLoginTime, status, promission
        from account
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Jan 18 20:59:20 CST 2018.
        -->
        select id, username, password, employeeId, lastLoginTime, status, promission
        from account
    </select>

    <select id="selectByAccount" resultMap="BaseResultMap" parameterType="com.swm.entity.Account">
        select id, username, password, employeeId, lastLoginTime, status, promission
        from account
        <where>
            <if test="id!=null">
                id=#{id}
            </if>
            <if test="username!=null">
                AND username=#{username}
            </if>
            <if test="password!=null">
                AND password=#{password}
            </if>
            <if test="employeeId!=null">
                AND employeeId=#{employeeId.id}
            </if>
            <if test="lastLoginTime!=null">
                AND lastLoginTime=#{lastLoginTime}
            </if>
            <if test="status!=null">
                AND status=#{status}
            </if>
            <if test="promission!=null">
                AND promission=#{promission}
            </if>
        </where>
    </select>

    <select id="selectByPageAccount" resultMap="BaseResultMap">
        select id, username, password, employeeId, lastLoginTime, status, promission
        from account
        <if test="account!=null">
            <where>
                <if test="account.id!=null">
                    id=#{account.id}
                </if>
                <if test="account.username!=null">
                    AND username=#{account.username}
                </if>
                <if test="account.password!=null">
                    AND password=#{account.password}
                </if>
                <if test="account.employeeId!=null">
                    AND employeeId=#{account.employeeId.id}
                </if>
                <if test="account.lastLoginTime!=null">
                    AND lastLoginTime=#{account.lastLoginTime}
                </if>
                <if test="account.status!=null">
                    AND status=#{account.status}
                </if>
                <if test="account.promission!=null">
                    AND promission=#{account.promission}
                </if>
                <if test="personList!=null">
                    and employeeId in
                    <foreach collection="personList" index="index" item="emp" open="(" separator="," close=")">
                        #{emp.id}
                    </foreach>
                </if>
            </where>
        </if>
        <if test="pageIndex!=null and pageSize!=null">
            limit #{pageIndex},#{pageSize}
        </if>
    </select>


    <select id="countAll" resultType="int">
        select count(*) from account
    </select>

    <select id="countByPageAccount" resultType="int">
        select count(*) from account
        <if test="account!=null">
            <where>
                <if test="account.id!=null">
                    id=#{account.id}
                </if>
                <if test="account.username!=null">
                    AND username=#{account.username}
                </if>
                <if test="account.password!=null">
                    AND password=#{account.password}
                </if>
                <if test="account.employeeId!=null">
                    AND employeeId=#{account.employeeId.id}
                </if>
                <if test="account.lastLoginTime!=null">
                    AND lastLoginTime=#{account.lastLoginTime}
                </if>
                <if test="account.status!=null">
                    AND status=#{account.status}
                </if>
                <if test="account.promission!=null">
                    AND promission=#{account.promission}
                </if>
                <if test="personList!=null">
                    and employeeId in
                    <foreach collection="personList" index="index" item="emp" open="(" separator="," close=")">
                        #{emp.id}
                    </foreach>
                </if>
            </where>
        </if>
        <if test="pageIndex!=null and pageSize!=null">
            limit #{pageIndex},#{pageSize}
        </if>
    </select>
</mapper>